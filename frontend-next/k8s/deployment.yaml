apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-dashboard-frontend-next-configmap
data:
  CLUSTER_API_BACKEND_URL: 'http://k8s-dashboard-backend-rust-svc'
  CLUSTER_API_BACKEND_PORT: '4000'
  NEXT_PUBLIC_REFRESH_RATE_SECONDS: '30'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dashboard-frontend-next-depl
  labels:
    app: k8s-dashboard-frontend-next
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-dashboard-frontend-next
  template:
    metadata:
      labels:
        app: k8s-dashboard-frontend-next
    spec:
      containers:
        - name: k8s-dashboard-frontend-next
          image: ghcr.io/lolei/k8s-dashboard-frontend-next:1.0.4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: k8s-dashboard-frontend-next-configmap
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: 3000
              path: /
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: 3000
              path: /
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-dashboard-frontend-next-svc
  labels:
    run: k8s-dashboard-frontend-next
spec:
  selector:
    app: k8s-dashboard-frontend-next
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8s-dashboard-frontend-next-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - k8s-dashboard.lolei.dev
      secretName: k8s-dashboard-frontend-next-tls
  rules:
    - host: k8s-dashboard.lolei.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: k8s-dashboard-frontend-next-svc
                port:
                  number: 80
